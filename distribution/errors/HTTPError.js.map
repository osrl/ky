{"version":3,"file":"HTTPError.js","sourceRoot":"","sources":["../../source/errors/HTTPError.ts"],"names":[],"mappings":"AAEA,qEAAqE;AACrE,MAAM,OAAO,SAAU,SAAQ,KAAK;IAKnC,YACC,QAAkB,EAClB,OAAgB,EAChB,OAA0B;QAE1B,MAAM,IAAI,GACT,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;QACjE,MAAM,KAAK,GAAG,QAAQ,CAAC,UAAU,IAAI,EAAE,CAAC;QACxC,MAAM,MAAM,GAAG,GAAG,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;QACzC,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,eAAe,MAAM,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC;QAErE,KAAK,CAAC,uBAAuB,MAAM,EAAE,CAAC,CAAC;QAfxC;;;;;WAA0B;QAC1B;;;;;WAAwB;QACxB;;;;;WAAkC;QAejC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,IAAI;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,EAAO,CAAC;IAC1C,CAAC;CACD","sourcesContent":["import type { NormalizedOptions } from \"../types/options.js\";\n\n// eslint-lint-disable-next-line @typescript-eslint/naming-convention\nexport class HTTPError extends Error {\n\tpublic response: Response;\n\tpublic request: Request;\n\tpublic options: NormalizedOptions;\n\n\tconstructor(\n\t\tresponse: Response,\n\t\trequest: Request,\n\t\toptions: NormalizedOptions\n\t) {\n\t\tconst code =\n\t\t\tresponse.status || response.status === 0 ? response.status : \"\";\n\t\tconst title = response.statusText || \"\";\n\t\tconst status = `${code} ${title}`.trim();\n\t\tconst reason = status ? `status code ${status}` : \"an unknown error\";\n\n\t\tsuper(`Request failed with ${reason}`);\n\n\t\tthis.name = \"HTTPError\";\n\t\tthis.response = response;\n\t\tthis.request = request;\n\t\tthis.options = options;\n\t}\n\n\tasync json<F = any>(): Promise<F> {\n\t\treturn this.response.clone().json() as F;\n\t}\n}\n"]}