{"version":3,"file":"index.js","sourceRoot":"","sources":["../source/index.ts"],"names":[],"mappings":"AAAA,kCAAkC;AAElC,OAAO,EAAE,EAAE,EAAE,MAAM,cAAc,CAAC;AAClC,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,MAAM,qBAAqB,CAAC;AAG3D,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AAGpD,MAAM,cAAc,GAAG,CAAC,QAA2B,EAAc,EAAE;IAClE,qEAAqE;IACrE,MAAM,EAAE,GAAiC,CAAC,KAAY,EAAE,OAAiB,EAAE,EAAE,CAC5E,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;IAEvD,KAAK,MAAM,MAAM,IAAI,cAAc,EAAE;QACpC,qEAAqE;QACrE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,KAAY,EAAE,OAAiB,EAAE,EAAE,CAChD,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,gBAAgB,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;KACnE;IAED,EAAE,CAAC,MAAM,GAAG,CAAC,WAA8B,EAAE,EAAE,CAC9C,cAAc,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/C,EAAE,CAAC,MAAM,GAAG,CAAC,WAA8B,EAAE,EAAE,CAC9C,cAAc,CAAC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;IACzD,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;IAEf,OAAO,EAAgB,CAAC;AACzB,CAAC,CAAC;AAEF,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;AAE5B,eAAe,EAAE,CAAC;AAsBlB,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAClD,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC","sourcesContent":["/*! MIT License Â© Sindre Sorhus */\n\nimport { Ky } from \"./core/Ky.js\";\nimport { requestMethods, stop } from \"./core/constants.js\";\nimport type { KyInstance } from \"./types/ky.js\";\nimport type { Input, Options } from \"./types/options.js\";\nimport { validateAndMerge } from \"./utils/merge.js\";\nimport { Mutable } from \"./utils/types.js\";\n\nconst createInstance = (defaults?: Partial<Options>): KyInstance => {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tconst ky: Partial<Mutable<KyInstance>> = (input: Input, options?: Options) =>\n\t\tKy.create(input, validateAndMerge(defaults, options));\n\n\tfor (const method of requestMethods) {\n\t\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\t\tky[method] = (input: Input, options?: Options) =>\n\t\t\tKy.create(input, validateAndMerge(defaults, options, { method }));\n\t}\n\n\tky.create = (newDefaults?: Partial<Options>) =>\n\t\tcreateInstance(validateAndMerge(newDefaults));\n\tky.extend = (newDefaults?: Partial<Options>) =>\n\t\tcreateInstance(validateAndMerge(defaults, newDefaults));\n\tky.stop = stop;\n\n\treturn ky as KyInstance;\n};\n\nconst ky = createInstance();\n\nexport default ky;\n\nexport type {\n\tOptions,\n\tNormalizedOptions,\n\tRetryOptions,\n\tSearchParamsOption,\n\tDownloadProgress,\n\tHttpMethod,\n} from \"./types/options.js\";\n\nexport type {\n\tHooks,\n\tBeforeRequestHook,\n\tBeforeRetryHook,\n\tBeforeRetryState,\n\tBeforeErrorHook,\n\tAfterResponseHook,\n} from \"./types/hooks.js\";\n\nexport type { ResponsePromise } from \"./types/ResponsePromise.js\";\nexport type { KyResponse } from \"./types/response.js\";\nexport { HTTPError } from \"./errors/HTTPError.js\";\nexport { TimeoutError } from \"./errors/TimeoutError.js\";\n"]}